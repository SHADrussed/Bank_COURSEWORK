import pytest

from src.masks import get_mask_card_number


@pytest.mark.parametrize('card_number, expected', [
    # Стандартные 16-значные номера карт
    (7000792289606361, '7000 79** **** 6361'),
    (8918301293892991, '8918 30** **** 2991'),
    (1234567812345678, '1234 56** **** 5678'),
    (9876543210987654, '9876 54** **** 7654'),
    (1111222233334444, '1111 22** **** 4444'),
    (5555666677778888, '5555 66** **** 8888'),
    (9999888877776666, '9999 88** **** 6666'),
    (1234123412341234, '1234 12** **** 1234'),
    (5678567856785678, '5678 56** **** 5678'),
    (4321432143214321, '4321 43** **** 4321'),

    # Номера карт с меньшим количеством цифр
    (123456789012345, '1234 56** **** 2345'),  # 15 цифр
    (12345678901234, '1234 56** **** 1234'),  # 14 цифр
    (1234567890123, '1234 56** **** 0123'),   # 13 цифр
    (123456789012, '1234 56** **** 9012'),    # 12 цифр
    (12345678901, '1234 56** **** 8901'),     # 11 цифр
    (1234567890, '1234 56** **** 7890'),      # 10 цифр
    (123456789, '1234 56** **** 6789'),       # 9 цифр
    (12345678, '1234 56** **** 5678'),        # 8 цифр

    # Номера карт с большей длиной (19 цифр)
    (1234567890123456789, '1234 56** **** 6789'),  # 19 цифр
    (9876543210987654321, '9876 54** **** 4321'),  # 19 цифр

    # Пустая строка или некорректный ввод
    ("", ""),  # Пустая строка
    ('', ""),  # None как входное значение

    # Маленькая строка
    (423322, "** ****"),
    (1322, "** **"),
    (12, "**"),
    (1, "*"),
])

def test_get_mask_card_number(card_number: int, expected):
    assert get_mask_card_number(card_number) == expected


